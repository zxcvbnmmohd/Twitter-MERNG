import { useEffect, useState, useRef } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import Loader from "react-loader-spinner";
import { connect } from "react-redux";
import { useAuth } from "../components/auth";

const Login = () => {
  const { auth, initializing, getRedirect, clearRedirect, user } = useAuth();
  const [values, setValues] = useState({ username: "", password: "" });
  const [loading, setLoading] = useState(false);
  const mounted = useRef(false);
  const router = useRouter();

  useEffect(() => {
    mounted.current = true;

    return () => {
      mounted.current = false;
    };
  }, []);

  useEffect(() => {
    if (!initializing) {
      if (user) {
        const redirect = getRedirect();
        if (redirect) {
          router.push(redirect);
          clearRedirect();
        } else {
          router.push("/home");
        }
      }
    }
  }, [router, getRedirect, clearRedirect, initializing, user]);

  const onChange = (e) => {
    setValues({ ...values, [e.target.name]: e.target.value });
  };

  const onLogin = async (e) => {
    e.preventDefault();
    setLoading(true);

    await auth.login(values);

    setLoading(false);
  };

  return (
    <div>
      <Head>
        <title>Twitter PERNG Clone | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-row justify-center bg-twitter-blue text-twitter-text h-screen items-center">
        <div className="flex h-full w-full justify-center align-center">
          <Image
            src="/images/logo.png"
            width="250"
            height="250"
            objectFit="contain"
          />
        </div>

        <div className="flex h-full w-full justify-center bg-black">
          <div className="w-3/5 h-3/5 self-center bg-white text-black rounded-lg self-middle">
            <form
              className="flex flex-col justify-center items-center m-20"
              onSubmit={async (e) => await onLogin(e)}
            >
              <h1 className="text-2xl mb-5 text-center">Login!</h1>

              <input
                className="w-4/5 h-[50px] mb-2 text-center rounded-full"
                placeholder="Username"
                name="username"
                type="text"
                value={values.username}
                onChange={(e) => onChange(e)}
              />
              <input
                className="w-4/5 h-[50px] mb-6 text-center rounded-full"
                placeholder="Password"
                name="password"
                type="password"
                value={values.password}
                onChange={(e) => onChange(e)}
              />

              <button
                className="flex w-4/5 h-[50px] mb-3 bg-twitter-blue rounded-full text-white justify-center items-center"
                type="submit"
              >
                {loading === true ? (
                  <Loader
                    type="Puff"
                    color="#FFFFFF"
                    height={40}
                    width={40}
                    timeout={5000}
                  />
                ) : (
                  <p>LOGIN</p>
                )}
              </button>

              <Link href="/register" className="cursor-pointer">
                <a>Or click here to Regiser</a>
              </Link>
            </form>
          </div>
        </div>
      </main>
    </div>
  );
};

export default connect(null, null)(Login);
